// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPItest.Models;

#nullable disable

namespace WebAPItest.Migrations
{
    [DbContext(typeof(A01Context))]
    partial class A01ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPItest.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("brandId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Brand1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("brand");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("logo");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phoneNumber");

                    b.HasKey("BrandId")
                        .HasName("PK__Brand__06B772993166DED0");

                    b.ToTable("Brand", (string)null);
                });

            modelBuilder.Entity("WebAPItest.Models.Favorite", b =>
                {
                    b.Property<int>("FavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteId"));

                    b.Property<int>("FurnitureId")
                        .HasColumnType("int")
                        .HasColumnName("furnitureId");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.HasKey("FavoriteId")
                        .HasName("PK__Favorite");

                    b.HasIndex("FurnitureId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorite", (string)null);
                });

            modelBuilder.Entity("WebAPItest.Models.Furniture", b =>
                {
                    b.Property<int>("FurnitureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("furnitureId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FurnitureId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("brandId");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("color");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("location");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("picture");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("style");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("type");

                    b.HasKey("FurnitureId")
                        .HasName("PK__Furnitur__BD41E4C59D892524");

                    b.HasIndex("BrandId");

                    b.ToTable("Furniture", (string)null);
                });

            modelBuilder.Entity("WebAPItest.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("username");

                    b.HasKey("UserId")
                        .HasName("PK__Users__CB9A1CFF73659BC8");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebAPItest.Models.Favorite", b =>
                {
                    b.HasOne("WebAPItest.Models.Furniture", "Furniture")
                        .WithMany()
                        .HasForeignKey("FurnitureId")
                        .IsRequired()
                        .HasConstraintName("FK__Favorite__furnit__2B3F6F97");

                    b.HasOne("WebAPItest.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Favorite__userId__2A4B4B5E");

                    b.Navigation("Furniture");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebAPItest.Models.Furniture", b =>
                {
                    b.HasOne("WebAPItest.Models.Brand", "Brand")
                        .WithMany("Furnitures")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK__Furniture__brand__286302EC");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("WebAPItest.Models.Brand", b =>
                {
                    b.Navigation("Furnitures");
                });
#pragma warning restore 612, 618
        }
    }
}
